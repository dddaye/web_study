<div class="my-5">
    <h1 class="text-center mb-5">장바구니</h1>
    <div id="div_cart"></div>
</div>

<script id="temp_cart" type="x-handlebars-template">
    <table class="table">
        {{#each .}}
        <tr>
            <td><img src="{{chkImage thumbnail}}" width="50"></td>
            <td>{{title}}</td>
            <td>{{authors}}</td>
            <td>{{fmtPrice price}}</td>
            <td>{{publisher}}</td>
            <td><button class="btn btn-danger btn-sm" isbn="{{isbn}}">삭제</button></td>
        </tr>
        {{/each}}
</table>
</script>

<script>
    Handlebars.registerHelper("chkImage", function(image){
        if(image){
            return image;
        }else{
            return "https://via.placeholder.com/120x170"
        }
    });
    Handlebars.registerHelper("fmtPrice", function(price){
        if(price) return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
    });
</script>

<script type="module">
    import {app} from '/javascripts/firebaseInit.js'
    import {getDatabase, ref, onValue, remove}
        from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
    const db=getDatabase(app);

    // 장바구니 목록 가져오기
    const ref_book=ref(db, `cart/${sessionStorage.getItem("uid")}`);
    onValue(ref_book, snapshot=>{
        let rows=[];
        snapshot.forEach(row=>{
            rows.push(row.val());
        });
        const temp=Handlebars.compile($("#temp_cart").html()); //템플릿 + 데이터 결합
        $("#div_cart").html(temp(rows)); // 컴파일된 템플릿 rows 적용해서 html만들고 div_cart에 보여줘
    })

    // 삭제 버튼을 클릭한 경우
    $("#div_cart").on("click", ".btn", function(){
        const isbn=$(this).attr("isbn");
        if(!confirm(`${isbn} 도서를 삭제하실래요?`)) return;
        const ref_book=ref(db, `cart/${sessionStorage.getItem("uid")}/${isbn}`)
        remove(ref_book);
        alert("삭제되었씁니다.")

    });
    </script>